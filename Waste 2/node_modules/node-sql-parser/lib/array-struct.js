(function (global, factory) {
  if (typeof define === "function" && define.amd) {
    define(["exports", "./column", "./util"], factory);
  } else if (typeof exports !== "undefined") {
    factory(exports, require("./column"), require("./util"));
  } else {
    var mod = {
      exports: {}
    };
    factory(mod.exports, global.column, global.util);
    global.arrayStruct = mod.exports;
  }
})(typeof globalThis !== "undefined" ? globalThis : typeof self !== "undefined" ? self : this, function (_exports, _column, _util) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.arrayStructExprToSQL = arrayStructExprToSQL;
  _exports.arrayStructValueToSQL = arrayStructValueToSQL;

  function arrayStructValueToSQL(expr) {
    const {
      array_path: arrayPath,
      expr_list: exprList,
      type
    } = expr;

    switch ((0, _util.toUpper)(type)) {
      case 'STRUCT':
        return `(${(0, _column.columnsToSQL)(exprList)})`;

      case 'ARRAY':
        if (exprList) return `[${exprList.map(col => `(${(0, _column.columnsToSQL)(col)})`).filter(_util.hasVal).join(', ')}]`;
        return `[${(0, _column.columnsToSQL)(arrayPath)}]`;

      default:
        return '';
    }
  }

  function arrayStructExprToSQL(expr) {
    const {
      definition,
      keyword
    } = expr;
    const result = [(0, _util.toUpper)(keyword)];

    if (definition && typeof definition === 'object') {
      result.length = 0;
      result.push((0, _util.arrayStructTypeToSQL)(definition));
    }

    result.push(arrayStructValueToSQL(expr));
    return result.filter(_util.hasVal).join('');
  }
});